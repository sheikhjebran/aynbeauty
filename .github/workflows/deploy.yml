name: Deploy to Production Server

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Copy production environment file
        run: cp .env.prod .env.local

      - name: Build application
        run: npm run build

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: 22
          script: |
            echo "üöÄ Starting deployment..."

            # Navigate to project directory
            cd /var/www/aynbeauty

            # Stop the application
            echo "‚èπÔ∏è Stopping application..."
            pm2 stop aynbeauty || true


            # Pull latest changes
            echo "üì• Pulling latest changes..."
            git fetch origin
            git reset --hard origin/main

            # Copy production environment
            echo "üìã Setting up environment..."
            if [ -f ".env.prod" ]; then
              cp .env.prod .env.local
              echo "‚úÖ Production environment file copied"
            else
              echo "‚ö†Ô∏è Warning: .env.prod not found, using existing .env.local"
            fi

            # Install dependencies
            echo "üì¶ Installing dependencies..."
            npm ci --production=false

            # Build the application
            echo "üî® Building application..."
            npm run build

            # Update database schema (if migration exists)
            echo "üóÑÔ∏è Updating database..."
            if [ -f "migrate-image-urls.sql" ]; then
              mysql -u ${{ secrets.DB_USER }} -p${{ secrets.DB_PASSWORD }} ${{ secrets.DB_NAME }} < migrate-image-urls.sql || true
            fi

            # Set proper permissions
            echo "üîê Setting permissions..."
            sudo chown -R www-data:www-data /var/www/aynbeauty || echo "‚ö†Ô∏è Permission setting skipped (no sudo access)"
            sudo chmod -R 755 /var/www/aynbeauty || echo "‚ö†Ô∏è Permission setting skipped (no sudo access)"

            # Ensure uploads directory exists with proper permissions
            mkdir -p /var/www/aynbeauty/public/uploads/products
            sudo chown -R www-data:www-data /var/www/aynbeauty/public/uploads || echo "‚ö†Ô∏è Upload permission setting skipped (no sudo access)"
            sudo chmod -R 755 /var/www/aynbeauty/public/uploads || echo "‚ö†Ô∏è Upload permission setting skipped (no sudo access)"

            # Restart the application
            echo "üîÑ Restarting application..."
            pm2 start aynbeauty || pm2 restart aynbeauty

            # Show status
            echo "üìä Application status:"
            pm2 status

            # Test the application
            echo "üß™ Testing application..."
            sleep 10
            if curl -f http://localhost:3000/api/health --max-time 30 --silent; then
              echo "‚úÖ Health check passed"
            else
              echo "‚ö†Ô∏è Health check failed, checking if app is running..."
              pm2 describe aynbeauty || echo "App not running in PM2"
            fi

            echo "‚úÖ Deployment completed successfully!"
            echo "üåê Application is running at: http://66.116.199.206:3000"

      - name: Notify deployment success
        if: success()
        run: echo "‚úÖ Deployment completed successfully!"
        
      - name: Notify deployment failure
        if: failure()
        run: |
          echo "‚ùå Deployment failed!"
          echo "Please check the logs above for details."
          exit 1
